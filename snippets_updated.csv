snippets_rows
id,title,description,language,codeSnippet,userId
17,WP Bakery Textfield,Single text field for WP Bakery,WP Bakery,"[
    'type' => 'textfield',
    'class' => 'title-class',
    'heading' => ‚ÄòSingle Text',
    'param_name' => 'single_text',
    'save_always' => true,
    'description' => ‚Äò‚Äô,
    'weight' => 0,
    'group' => 'Content'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
18,WP Bakery Textarea,Single text area for WP Bakery,WP Bakery,"[
    'type' => 'textarea',
    'class' => 'title-class',
    'heading' => 'text',
    'param_name' => 'text_area',
    'save_always' => true,
    'description' => ‚Äò‚Äô,
    'weight' => 0,
    'group' => 'Content'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
22,WP Bakery Block Skeleton,Basic skeleton for a block in WP Bakery,WP Bakery,"<?php
class vcBlockName extends WPBakeryShortCode

{
	private $shortCodeName = 'vc_block_name';

	function __construct()
	{
		add_action('vc_before_init', [$this, $this->shortCodeName.'_mapping']);
		add_shortcode($this->shortCodeName, [$this, $this->shortCodeName.'_html']);
	}

	public function vc_block_name_mapping()
	{
		if (!defined('WPB_VC_VERSION')) {
			return;
		}

		vc_map(
			[
				'name' => __('Block Name', 'text-domain'),
				'base' => $this->shortCodeName,
				'description' => __('', 'text-domain'),
				'category' => __('Content', 'text-domain'),
				'icon' => '',
				'params' => [

					// Block elements go here
				],

			]
		);
	}

	public function vc_block_name_html($atts, $content)
	{

		extract(
			shortcode_atts(
				[

					// Register blocks / shortcodes  elements here
					// 'title' => '',
					// 'link' => '',
				],
				$atts
			)
		);

		$content = wpb_js_remove_wpautop($content, true); // Text area HTML

		$image = wp_get_attachment_image_src($image, 'medium')[0];
		$link = vc_build_link($link); // Builds button
		$shortcode = rawurldecode(base64_decode($shortcode)); // Raw HTML

		ob_start();

		?>
		
		<?php if ($title) : ?>
			<h1><?php echo $title; ?></h1>
		<?php endif ?>
		
		<?php if ($content) : ?>
			<p><?php echo $content; ?></p>
		<?php endif ?>
		
		<?php if ($button['url']): ?>
			<a href=""<?php echo $button['url']; ?>""><?php echo $button['title']; ?></a>
		<?php endif; ?>
		
		<?php if ($image) : ?>
			<img src=""<?php echo wp_get_attachment_image_src($image, 'medium')[0]; ?>"" 
				 class=""img-fluid"" 
				 alt="""" 
				 loading=""lazy"">
		<?php endif ?>
		
		<?php echo do_shortcode($contact_form_shortcode); ?>

		<?php

		return ob_get_clean();
	}
}

new vcBlockName ;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
23,WP Bakery WYSIWYG ,WYSIWYG editor for WP Bakery (only one per block),WP Bakery,"[
    'type' => 'textarea_html',
    'class' => 'title-class',
    'heading' => 'Content',
    'param_name' => 'content',
    'save_always' => true,
    'description' => ‚Äò‚Äô,
    'weight' => 0,
    'group' => 'Content'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
24,WP Bakery Raw HTML,Raw HTML field for WP Bakery,WP Bakery,"[
    'type' => 'textarea_raw_html',
    'class' => 'title-class',
    'heading' => 'Shortcode'
    'param_name' => 'shortcode',
    'value' => 'text-domain',
    'save_always' => true,
    'description' => ‚Äò‚Äô,
    'weight' => 0,
    'group' => 'Content'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
25,WP Bakery Button,Button for WP Bakery,WP Bakery,"[
    ""type"" => ""vc_link"",
    ""class"" => """",
    ""heading"" => ""Link"",
    ""param_name"" => ""link"",
    ""value"" => '',
    'save_always' => true,
    'description' => '',
    'weight' => 0,
    'group' => 'Content'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
26,WP Bakery Single Image,Single image for WP Bakery,WP Bakery,"[
    ""type"" => ""attach_image"",
    ""class"" => """",
    ""heading"" => ""Image"",
    ""param_name"" => ""image"",
    'save_always' => true,
    'description' => ‚Äò‚Äô,
    'weight' => 0,
    'group' => 'Image'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
27,WP Bakery Multiple Images,Attach multiple images for WP Bakery,WP Bakery,"[
    ""type"" => ""attach_images"",
    ""class"" => """",
    ""heading"" => ""Multi Image"",
    ""param_name"" => ""multi_image"",
    'save_always' => true,
    'description' => ‚Äò‚Äô,
    'weight' => 0,
    'group' => 'Image'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
28,WP Bakery Checkbox,Checkbox for WP Bakery,WP Bakery,"[
    ""type"" => ""checkbox"",
    ""class"" => """",
    ""heading"" => ""Checkbox"",
    ""param_name"" => ""checkbox"",
    ""value"" => ""Tick Me"",
    'save_always' => true,
    'description' => ‚Äò‚Äô,
    'weight' => 0,
    'group' => 'Content'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
29,WP Bakery Dropdown,Dropdown select field for WP Bakery,WP Bakery,"[
    'type' => 'dropdown',
    'heading' => 'Dropdown',
    'param_name' => 'dropdown',
    'value' => [
    'Option 1 Label' => 'option1value',
    'Option 2 Label' => 'option2value',
    'Option 3 Label' => 'option3value',
    ],
    'save_always' => true,
    'description' => ‚Äò‚Äô,
    'weight' => 0,
    'group' => 'Content'
],",user_2mlEznod51hhL2F6Y9kHYlSzv8I
30,Wordpress Loop,Loops through all posts and displays them,WordPress,"<?php if(have_posts()) : while (have_posts()) : the_post(); ?>
    <article id=""post-<?php the_ID(); ?>"" <?php post_class(); ?> >
        <header class=""entry-header"">
            <h1><?php the_title() ?></h1>
        </header>
        <div class=""entry-content"">
            <p><?php the_content(); ?></p>
        </div>
    </article>
<?php endwhile; else: ?>
    <p>Sorry nothing found ... </p>
<?php endif;?>
<?php echo paginate_links() ?>",user_2mlEznod51hhL2F6Y9kHYlSzv8I
31,Yoast Breadcrumbs,Echo Yoast Breadcrumbs,WordPress,"<?php
   if (function_exists('yoast_breadcrumb')):
    yoast_breadcrumb( '<div class=""breadcrumb"">','</div>');
   endif;
?>
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
32,Wordpress WP_Query,"Custom wordpress loops, creates custom arguments for the new insistence of wp_query",WordPress,"<?php

$args = [
    'post_type' => 'post',
    'posts_per_page' => 3,
    'category_name' => 'staff, news', Category's to show
    'category__not_in' => array(1),   Category ids to exclude
];

Creates a new insistence of wp_query stored in an object ($query)

$query = new WP_Query($args);

Loops through posts that match the custom query

if( $query->have_posts() ): while( $query->have_posts() ) : $query->the_post(); ?>
    <article class=""latest-news"">
        <a href=""<?php the_permalink(); ?>""><?php the_post_thumbnail('medium'); ?></a>
        <h3><a href=""<?php the_permalink(); ?>""><?php the_title(); ?></a></h3>
        <div class=""meta-info"">
            <p>posted on <?php echo  get_the_date(); ?> by <?php the_author_posts_link(); ?></p>
            <p>Categories: <?php the_category(' '); ?> </p>
            <p>Tags: <?php the_tags('', ','); ?></p>
        </div>
        <?php the_excerpt(); ?>
    </article>
<?php endwhile; wp_reset_postdata(); else: ?>
    <p>Nothing yet to be displayed!</p>
<?php endif; ?>
    <?php echo paginate_links() ?>",user_2mlEznod51hhL2F6Y9kHYlSzv8I
33,JavaScript If Else Statement,Executes some code if a condition is true and another code if that condition is false,JavaScript,"const age = 19;

if(age >= 18) {
    console.log('You can start driving üöó')
} else {
    console.log('You are too young to start driving ‚ùå')
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
34,JavaScript Switch Statement,The switch statement executes a block of code depending on different cases,JavaScript,"const day = 'Sunday';

switch (day) {
    case 'Monday':
        console.log('Plan course structure')
        console.log('Go to coding meet up')
        break
    case 'Tuesday':
        console.log('prepare theory videos')
        break
    case 'Wednesday':
        console.log('Write code examples')
        break
    case 'Thursday':
        console.log('Write code examples')
        break
    case 'Friday':
        console.log('Record Videos')
        break
    case 'Saturday':
    case 'Sunday':
        console.log('Enjoy the weekend üòÅ')
        break
    default:
        console.log('Not a valid day')
}
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
35,JavaScript Ternary Operator ,(Conditional Operator) - One line if / else statement,JavaScript,"const ageTwo = 25;

ageTwo >= 18 ? console.log ('I will have a beer üç∫') : console.log('I will have water üíß');",user_2mlEznod51hhL2F6Y9kHYlSzv8I
36,PHP If Else Statement,Executes some code if a condition is true and another code if that condition is false,PHP,"$age = 19;

if($age >= 18) {
    echo 'You can start driving üöó';
} else {
    echo 'You are too young to start driving ‚ùå';
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
37,CSS Media Query,"Changes the background color of the <body> element to ""lightblue"" when the browser window is 600px wide or less:",CSS,"@media only screen and (max-width: 767px) {
  body {
    background-color: lightblue;
  }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
38,HTML Basic Form,A basic form in HTML with name and email fields,HTML,"<form method=''POST"" action=""someurl.com"">
    <label for=""firstname"">First name: </label>
    <input type=""text"" name=""firstname""  required>
    <br>
    <label for=""lastname"">Last name: </label>
    <input type=""text"" name=""lastname""  required>
    <br>
    <label for=""email"">email: </label>
    <input type=""email"" name=""email""  required>
    <br>
    <label for=""password"">password: </label>
    <input type=""password"" name=""password""  required>
    <br>
    <input type=""submit"" value=""Login!"">
</form>",user_2mlEznod51hhL2F6Y9kHYlSzv8I
39,React UseEffect Hook,"Commonly used in React functional components to perform side effects in the component, such as fetching data from an API",JavaScript,"useEffect(() => {

    const fetchData = async () => {
      try {
        const response = await fetch('https://api.example.com/data');
        
        if (response.ok) {
          const result = await response.json();
          setData(result);
        } 

      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();

  }, []);",user_2mlEznod51hhL2F6Y9kHYlSzv8I
40,React Router Example,Creating routes with React Router Dom,JavaScript,"<BrowserRouter>
    <Navbar />
    <Routes>
        <Route path=""/"" element={<LoginPage />}/>
        <Route path=""/snippets"" element={<HomePage />}/>
        <Route path=""/create"" element={<CreatePage />}/>
        <Route path=""/login"" element={<LoginPage />}/>
        <Route path=""/signup"" element={<SignupPage />}/>
        <Route path=""/snippet/:id"" element={<SnippetPage />}/>
        <Route path=""/:id"" element={<UpdatePage />}/>
        <Route path=""/search"" element={<SearchPage />}/>
    </Routes>
</BrowserRouter>    ",user_2mlEznod51hhL2F6Y9kHYlSzv8I
41,Next.Js Image Component,A component for displaying images with next.js,JavaScript,"import Image from 'next/image'
 
export default function Page() {
  return (
    <Image
      src=""/profile.png""
      width={500}
      height={500}
      alt=""Picture of the author""
    />
  )
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
42,Next.Js Link Component,Extends the HTML <a> element to provide prefetching and client-side navigation between routes.,JavaScript,"import Link from 'next/link'
 
function Home() {
  return (
    <ul>
      <li>
        <Link href=""/"">Home</Link>
      </li>
      <li>
        <Link href=""/about"">About Us</Link>
      </li>
      <li>
        <Link href=""/blog/hello-world"">Blog Post</Link>
      </li>
    </ul>
  )
}
 
export default Home",user_2mlEznod51hhL2F6Y9kHYlSzv8I
43,Next.Js Basic Component,A basic navigation component for Next.Js,JavaScript,"import React from 'react';
import Link from ""next/link"";

const Navbar = () => {
    return (
        <nav>
            <h1>Comapany Name</h1>
            <Link href=""/"">Home</Link>
            <Link href=""/about"">About</Link>
        </nav>
    );
};

export default Navbar;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
44,Next.Js 404 Page,Create a 404 page in Next.Js. (file must be called not-found.jsx and be in the root),JavaScript,"import Link from ""next/link"";

const NotFound = () => {
    return (
        <main className=""text-center"">
            <h2 className=""text-3xl"">We hit a brick wall</h2>
            <p>We could not find the page you were looking for.</p>
            <p>Go back to the <Link href=""/"">Dashboard</Link></p>
        </main>
    );
};

export default NotFound;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
45,Next.Js Loading UI,Loading UI to be shown when  waiting for data to be fetched. (file must be called loading.jsx and be in the root). Can also be used with suspense. ,JavaScript,"const Loading = () => {
    return (
        <main className=""text-center"">
            <h2 className=""text-primary"">Loading Data...</h2>
            <p>Hopefully not for too long</p>
        </main>
    );
};

export default Loading;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
46,Next.Js Suspense  ,"Only shows loading UI for component wrapped in suspense component, fallback must be loading component..",JavaScript,"import { Suspense } from ""react""
import TicketList from ""./TicketList""
import Loading from ""../loading""

export default function Tickets() {
  return (
    <main>
      <nav>
        <div>
          <h2>Tickets</h2>
          <p><small>Currently open tickets.</small></p>
        </div>
      </nav>
      <Suspense fallback={<Loading />}>
        <TicketList />
      </Suspense>
    </main>
  )
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
47,Next.Js Route Groups,"Files can be organised into route groups to keep files tidy (FILE) is used to grouped routes, this will not affect page routing  ",JavaScript,"App
    (auth)  <---- will not affect url / page routing
        login
            page.jsx
        signup
            page.jsx
    (dashboard)  <---- will not affect url / page routing
        page.jsx
    components 
    layout.jsx
    not-fount.jsx
    node_modules
    next.config.js",user_2mlEznod51hhL2F6Y9kHYlSzv8I
48,Next.Js Page Meta Data,Adding custom meta data on a page per page basis.,JavaScript,"export const metadata = {
    title: 'Ticket Tribe | Open Tickets',
}

const Tickets = () => {
    return (
        <main>
            <nav>
                <div>
                    <h2>Tickets</h2>
                    <p>Currently open tickets</p>
                </div>
            </nav>
            <Suspense fallback={<Loading />}>
                <TicketList />
            </Suspense>
        </main>
    );
};

export default Tickets;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
49,Next.Js Dynamic Meta Data,Create dynamic meta data for a page.,JavaScript,"export const generateMetadata = async ({params}) => {
    const id = params.id

    const res = await fetch(`http://localhost:4000/tickets/${id}`)
    const ticket = await res.json()

    return {
        title: `Ticket Tribe | ${ticket.title}`
    }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
50,Next.Js HTTP Requests,"Make api endpoint to GET, POST data. Create a file called api (root) then a folder (endpoint) and a route.js file.",JavaScript,"import { NextResponse } from ""next/server""

export const dynamic = 'force-dynamic'

export async function GET() {
  const res = await fetch('http://localhost:4000/tickets')

  const tickets = await res.json()

  return NextResponse.json(tickets, {
    status: 200
  })
}

export async function POST(request) {
  const ticket = await request.json()

  const res = await fetch('http://localhost:4000/tickets', {
    method: 'POST',
    headers: {""Content-Type"": ""application/json""},
    body: JSON.stringify(ticket)
  })

  const newTicket = await res.json()

  return NextResponse.json(newTicket, {
    status: 201
  })
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
51,Supabase Next.Js Signup,Signup a new user with Supabase and Next.Js,JavaScript,"""use client""
import { useState } from 'react'
import { useRouter } from 'next/navigation'
import { createClientComponentClient } from ""@supabase/auth-helpers-nextjs""

// components
import AuthForm from ""../AuthForm""

export default function Signup() {
    const router = useRouter()
    const [error, setError] = useState('')
    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    
    const handleSubmit = async (e, email, password) => {
        e.preventDefault()
        setError('')

        const supabase = createClientComponentClient()
        const { error } = await supabase.auth.signUp({
            email,
            password,
            options: {
                emailRedirectTo: `${location.origin}/api/auth/callback`
            }
        })
        if (error) {
            setError(error.message)
        }
        if (!error) {
            router.push('/verify')
        }
    }

    return (
        <main>
            <h2 className=""text-center"">Sign up</h2>

            <form onSubmit={(e) => handleSubmit(e, email, password)}>
                <label>
                    <span>Email:</span>
                    <input
                        type=""email""
                        onChange={(e) => setEmail(e.target.value)}
                        value={email}
                        required
                    />
                </label>
                <label>
                    <span>Password:</span>
                    <input
                        type=""password""
                        onChange={(e) => setPassword(e.target.value)}
                        value={password}
                        required
                    />
                </label>
                <button className=""btn-primary"">Submit</button>
            </form>

            {error && (
                <div className=""error"">{error}</div>
            )}
        </main>
    )
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
52,Supabase Next.Js,Logout user with Supabase and Next.js (Logout Button Component),JavaScript,"'use client'
import React from 'react';
import {createClientComponentClient} from ""@supabase/auth-helpers-nextjs"";
import {useRouter} from ""next/navigation"";

const LogoutButton = () => {
    const router = useRouter()

    const handleLogout = async () => {
        const supabase = createClientComponentClient()
        const {error} = await supabase.auth.signOut()

        if (!error) {
            router.push('/login')
        }
    }

    return (
        <button className=""btn-primary"" onClick={handleLogout}>
            Logout
        </button>
    );
};

export default LogoutButton;
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
53,Supabase Next.Js Logout,Logout a user with Supabase and Next.js,JavaScript,"'use client'
import React from 'react';
import {createClientComponentClient} from ""@supabase/auth-helpers-nextjs"";
import {useRouter} from ""next/navigation"";

const LogoutButton = () => {
    const router = useRouter()

    const handleLogout = async () => {
        const supabase = createClientComponentClient()
        const {error} = await supabase.auth.signOut()

        if (!error) {
            router.push('/login')
        }
    }

    return (
        <button className=""btn-primary"" onClick={handleLogout}>
            Logout
        </button>
    );
};

export default LogoutButton;
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
54,Supabase Next.JS Login,Login a user with Supabase and Next.js,JavaScript,"'use client'
import React, {useState} from 'react';
import AuthForm from ""@/app/(auth)/AuthForm"";
import {createClientComponentClient} from ""@supabase/auth-helpers-nextjs"";
import {router} from ""next/client"";
import {useRouter} from ""next/navigation"";

const Login = () => {
    const router = useRouter()
    const [error, setError] = useState()

    const handleSubmit = async (e, email, password) => {
        e.preventDefault()
        setError('')
        const supabase = createClientComponentClient()

        const { error } = await supabase.auth.signInWithPassword({
            email: email,
            password: password
        })
        if (error) {
            setError(error.message)
        }
        if (!error) {
            router.push('/')
        }
    }

    return (
        <main>
            <h2 className=""text-center"">Login</h2>
            <AuthForm handleSubmit={handleSubmit}/>
            {error && (
                <div className=""error"">{error}</div>
            )}
        </main>
    );
};

export default Login;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
55,Supabase Next.Js Protect Route,Protect a route with Supabase and Next.Js (protecting a the route dashboard),JavaScript,"import React from 'react';
import Navbar from ""@/app/components/Navbar"";
import {createServerComponentClient} from ""@supabase/auth-helpers-nextjs"";
import {cookies} from ""next/headers"";
import {redirect} from ""next/navigation"";

const DashboardLayout = async ({children}) => {
    const supabase = createServerComponentClient({cookies})
    const {data} = await supabase.auth.getSession()

    if (!data.session) {
        redirect(""/login"")
    }

    return (
        <>
            <Navbar user={data.session.user} />
            {children}
        </>
    );
};

export default DashboardLayout;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
56,Supabase Next.js Middleware (keep seesion),Keeps session if a user leave computer for some time ect (middleware.js file to be placed in the root),JavaScript,"import { createMiddlewareClient } from '@supabase/auth-helpers-nextjs'
import { NextResponse } from 'next/server'

export async function middleware(req) {
    const res = NextResponse.next()
    const supabase = createMiddlewareClient({ req, res })
    await supabase.auth.getSession()
    return res
}

// Ensure the middleware is only called for relevant paths.
export const config = {
    matcher: [
        '/((?!_next/static|_next/image|favicon.ico).*)',
    ],
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
57,Supabase Create ,Create a new row in Supabase,JavaScript,"const add = async () => {
    const {data, error} = await supabase
               .from('snippets')
               .insert([{title, description, language, codeSnippet}])
               .select()

    if (error) {
            console.log(error)
            setFormError('Please fill all fields in the form')
        }

        if (data) {
            console.log(data)
        }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
58,Supabase Delete,Delete a row from Supabase,JavaScript," const handleDelete = async () => {
        const { data, error } = await supabase
            .from('snippets')
            .delete()
            .eq('id', data.id)
            .select();

        if (error) {
            console.log(error);
        }

        if (data) {
            console.log(data);
            navigate('/', { replace: true });
        }
    };",user_2mlEznod51hhL2F6Y9kHYlSzv8I
59,Supabase Update,Update a row in Supabase,JavaScript," const handleSubmit = async (e) => {
        e.preventDefault()

        const {data, error} = await supabase
            .from('snippets'). <-- Table name
            .update({title, description, language, codeSnippet}) <--- Columns to update
            .eq('id', id)
            .select()

        if (error) {
            console.log(error)
        }

        if (data) {
            console.log(data)
        }

    }",user_2mlEznod51hhL2F6Y9kHYlSzv8I
60,Supabase Read (Single),Read all rows from a table.,JavaScript,"  useEffect(() => {
        const fetchCodeSnippet = async () => {
            const { data, error } = await supabase
                .from('snippets') <-- Table name
                .select()
                .eq('id', id)
                .single();

            if (error) {
                navigate('/', { replace: true });
            }

            if (data) {
                setData(data);
            }
        };

        fetchCodeSnippet();
    }, [id, navigate]);",user_2mlEznod51hhL2F6Y9kHYlSzv8I
61,Supabase Read All,Read all rows from a table in Supabase,JavaScript,"  useEffect(() => {
        const fetchData = async () => {
            const {data, error} = await supabase
                .from('snippets')
                .select()

            if (error) {
                console.log(error)
            }

            if (data) {
                console.log(data)
            }
        }

    fetchData()
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
62,Supabase Login,Login a user with Supabase ,JavaScript," const handleSubmit = async (e) => {
        e.preventDefault()

        const { data, error } = await supabase.auth.signInWithPassword({
            email: email,
            password: password
        })

        if (error) {
            console.log(error)
        }

        if (data) {
            console.log(data)
        }
    }",user_2mlEznod51hhL2F6Y9kHYlSzv8I
63,Supabase Logout,Logout a user with Supabase,JavaScript,"const handleClick = async () => {
       const { error } = await supabase.auth.signOut()

       if (error) {
           console.log(error)
       }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
64,Supabase Setup,"Setup Supabase in a project, this code goes in a folder in the root called services, in a file called supabaseClient.js",JavaScript,"import { createClient } from '@supabase/supabase-js'

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL <--- superbase url
const supabaseKey = import.meta.env.VITE_SUPABASE_KEY <--- supabase anon key
const supabase = createClient(supabaseUrl, supabaseKey)

export default supabase",user_2mlEznod51hhL2F6Y9kHYlSzv8I
65,WordPress Custom Post Type,A custom post type for wordpress (functions.php).,WordPress,"function custom_post_type_registration() {
	$labels = array(
		'name'               => _x( 'Custom Post Type', 'post type general name', 'your-text-domain' ),
		'singular_name'      => _x( 'Custom Post', 'post type singular name', 'your-text-domain' ),
		'menu_name'          => _x( 'Custom Posts', 'admin menu', 'your-text-domain' ),
		'name_admin_bar'     => _x( 'Custom Post', 'add new on admin bar', 'your-text-domain' ),
		'add_new'            => _x( 'Add New', 'Custom Post', 'your-text-domain' ),
		'add_new_item'       => __( 'Add New Custom Post', 'your-text-domain' ),
		'new_item'           => __( 'New Custom Post', 'your-text-domain' ),
		'edit_item'          => __( 'Edit Custom Post', 'your-text-domain' ),
		'view_item'          => __( 'View Custom Post', 'your-text-domain' ),
		'all_items'          => __( 'All Custom Posts', 'your-text-domain' ),
		'search_items'       => __( 'Search Custom Posts', 'your-text-domain' ),
		'parent_item_colon'  => __( 'Parent Custom Posts:', 'your-text-domain' ),
		'not_found'          => __( 'No custom posts found.', 'your-text-domain' ),
		'not_found_in_trash' => __( 'No custom posts found in Trash.', 'your-text-domain' )
	);

	$args = array(
		'labels'             => $labels,
		'public'             => true,
		'publicly_queryable' => true,
		'show_ui'            => true,
		'show_in_menu'       => true,
		'query_var'          => true,
		'rewrite'            => array( 'slug' => 'custom-post-type' ),
		'capability_type'    => 'post',
		'has_archive'        => true,
		'hierarchical'       => false,
		'menu_position'      => null,
		'supports'           => array( 'title', 'editor', 'author', 'thumbnail', 'excerpt', 'comments' )
	);

	register_post_type( 'custom_post_type', $args );
}
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
66,WordPress Custom Taxonomy,A taxonomy is a way of grouping posts and pages under different terms with common characteristics.,WordPress,"<?php

function custom_taxonomy() {
    $args = [
            'labels' =>[
                 'name' => 'Custom Taxonomy Name (Services)',
                 'singular_name'  => 'Custom Taxonomy Name (Service)'
            ],
            'public' => true,
            'hierarchical' => true, // true for category, false for tags

        ];

register_taxonomy('custom_taxonomy_name', array('custom_post_type_name'), $args);

}

add_action('init', 'custom_taxonomy');

?>
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
67,WordPress Useful Template Tags,Useful template tags for wordpress.,WordPress,"Include tags
<?php get_header() ?> includes the header template for a theme
<?php get_footer() ?> includes the footer template for a theme
<?php get_sidebar() ?> includes the sidebar template for a theme
<?php get_template_part() ?> includes the named template part for a theme
<?php get_search_form() ?> displays search form

Login tags
<?php wp_loginout() ?> displays a link, thats allows users to login or out
<?php wp_logout_url() ?> displays a link, thats allows users to logout
<?php wp_login_url() ?> displays a link, thats allows users to login
<?php wp_login_form() ?> displays a login form
<?php wp_lostpassword_url() ?> displays a link, to reset password
<?php wp_register() ?> displays a link, to register
<?php is_user_logged_in() ?> checks if user is logged in

BlogInfo - provides general information about a wordpress install
<?php bloginfo('name') ?> site title
<?php bloginfo('description') ?> site tagline
<?php bloginfo('url') ?> site address

Navigation Tags
<?php register_nav_menus([ 'main-menu' => 'Main Menu', 'footer-menu' => 'Footer Menu']); ?> register wordpress menu (functions.php)
<?php wp_nav_menu('main-menu') ?> displays wordpress menu

Post / Page Tags
<?php the_ID() ?> returns ID of post or page ($post->ID; when in the wordpress loop)
<?php the_title() ?> returns the title of the post or page
<?php the_content() ?> returns the content of the post or page
<?php the_excerpt() ?> returns the excerpt of the post or page
<?php the_category() ?> returns the category of the post or page
<?php the_tags() ?> returns the tags of the post or page
<?php the_permalink() ?> returns the permalink for the current post or page
<?php the_date('F j, Y') ?> returns the date for the current post or page

",user_2mlEznod51hhL2F6Y9kHYlSzv8I
68,WordPress Core Template Files,Wordpress core template files and what they are used for.,WordPress,"index.php - Main theme page template
home.php - Blog home page template
page.php - Individual page template
single.php - Single blog post template
category.php - Category page template
author.php - Author page template
archive.php - Archive page template
search.php - Search page template
404.php - Error page template",user_2mlEznod51hhL2F6Y9kHYlSzv8I
69,Wordpress Register Menu,Register a menu in wordpress in functions.php,WordPress,"register_nav_menus([
    'main-menu' => 'Main Menu',
    'footer-menu' => 'Footer Menu'
]);

Displaying menus without args

<?php wp_nav_menu(['theme_location' => 'main-menu']) ?> Calls the main menu in the html

<?php wp_nav_menu(['theme_location' => 'footer-menu']) ?> Calls the footer menu in the html

",user_2mlEznod51hhL2F6Y9kHYlSzv8I
70,Wordpress Enqueue Styles and Scripts,Enqueueing Styles and scripts  (Function.php),WordPress,"function wpcustomtheme_load_scripts() {
    wp_enqueue_style('wpcustomtheme-style', get_stylesheet_uri());

    wp_enqueue_style('google-fonts', 'https:-fonts.googleapis.com/css2?family=Poppins:wght@400;700&display=swap');

    wp_enqueue_script('wpcustomtheme-javascript', get_template_directory_uri(). '/js/app.js' ); 
}

add_action('wp_enqueue_scripts', 'wpcustomtheme_load_scripts');",user_2mlEznod51hhL2F6Y9kHYlSzv8I
71,WordPress WP_Query (compare),Comparing posts with custom fields,WordPress,"<?php
    $args = [
        'post_type' => 'post',
        'posts_per_page' => 20,
        'meta_key' => 'order', custom field to compare
        'meta_compare' =>'<',  comparison operator
        'meta value' => 5,     value to compare (display posts with order field is less than 5)
        'orderby' => 'meta_value',
        'order' => 'DESC'
    ];

$query = new W_Query ($args);
?>",user_2mlEznod51hhL2F6Y9kHYlSzv8I
72,WordPress Page Templates,Creating templates for certain page and reusable templates,WordPress,"Template for certain pages on the website

page-home.php - creates a template for the page with the slug (url) home
page-about.php - creates a template for the page with the slug (url) about
page-contact.php - creates a template for the page with the slug (url) contact



Template for certain pages on the website - reusable template

general-template.php - creates a template for any page to use
contact-template.php - creates a template for any page to use
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
73,Supabase User Session,Check if a user is signed in or out,JavaScript,"useEffect(() => {
		const session = supabase.auth.session();
		setUser(session?.user);
		const { data: authListener } = supabase.auth.onAuthStateChange(
			(event, session) => {
				switch (event) {
					case ""SIGNED_IN"":
						setUser(session?.user);
						break;
					case ""SIGNED_OUT"":
						setUser(null);
						break;
					default:
				}
			}
		);
		return () => {
			authListener.unsubscribe();
		};
	}, []);
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
74,Firebase Initial Setup  ,Config file for setting up firebase in a project (lives inside firebase folder at the root),JavaScript,"import firebase from ""firebase"";
import 'firebase/firestore'
import 'firebase/auth'
import 'firebase/storage'

const firebaseConfig = {
    apiKey: ""AIzaSyDncNsqXCB-q52t7zv5X5NDrfy5zxrr5ws"",
    authDomain: ""project-dojo-631b6.firebaseapp.com"",
    projectId: ""project-dojo-631b6"",
    storageBucket: ""project-dojo-631b6.appspot.com"",
    messagingSenderId: ""588005029656"",
    appId: ""1:588005029656:web:1638f83082752031a3506d""
};

// Init Firebase
firebase.initializeApp(firebaseConfig)

// Init Services
const projectFirestore = firebase.firestore()
const projectAuth = firebase.auth()
const projectStorage =firebase.storage()

// Timestamp
const timestamp = firebase.firestore.Timestamp

export {projectFirestore, projectAuth, timestamp, projectStorage}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
75,PHP Arrays,Array types commonly used in php,PHP,"// Basic array

$names = ['Luke', 'Ben', 'Rich', 'Sam'];

echo $names[0]; // This will display Luke



// Associative array

$person = [
    name => 'Luke', // Key => Value
    age => 37,
    gender => 'Male',
];

echo $person['age']; // This will display 37


// Multi-dimensional array

$friends = [
    [
        name => 'Luke',
        age => 37,
        gender => 'Male',
    ],

    [
        name => 'Sam',
        age => 35,
        gender => 'Male',
    ],

    [
        name => ' Becca',
        age => 28,
        gender => 'Female',
    ],
];

echo $friends[1][‚Äòname‚Äô]; // This will display Sam",user_2mlEznod51hhL2F6Y9kHYlSzv8I
76,PHP Basic Array Methods,Basic array methods commonly used in php,PHP,"$names = ['Luke', 'Ben', 'Rich', 'Sam'];

$names[2] = 'Jack'; // Sets the name Jack to index of the 2
count($names) // Returns the number of elements in an array.
array_push($names) // Adds one or more elements to the end of an array.
array_pop($names) // Removes and returns the last element of an array.
array_shift($names) // Removes and returns the first element of an array.
array_unshift($names) // Adds one or more elements to the beginning of an array.
sort($names) // Sorts the elements of an array in ascending order.
rsort($names) // Sorts the elements of an array in descending order.
array_reverse($names) // Reverses the order of the elements in an array.
array_merge($array1, $array2) // Merges one or more arrays into a single array.
array_slice($names, 2) // Extracts a slice of an array based on a specified range of keys. Starts at Rich",user_2mlEznod51hhL2F6Y9kHYlSzv8I
77,PHP Ternary Operator ,One line if / else statement,PHP,"$ageTwo = 19;

echo $ageTwo >= 18 ? 'You can start driving'  :  'You are too young to start driving ';",user_2mlEznod51hhL2F6Y9kHYlSzv8I
78,PHP Switch Statement,Switch statement in php,PHP,"$day = 'Sunday';

switch ($day) {
    case 'Monday':
        echo 'Plan course structure';
        echo 'Go to coding meet up';
        break;
    case 'Tuesday':
        echo 'prepare theory videos';
        break;
    case 'Wednesday':
        echo 'Write code examples';
        break;
    case 'Thursday':
        echo 'Write code examples now';
        break;
    case 'Friday':
        echo 'Record Videos';
        break;
    case 'Saturday':
    case 'Sunday':
        echo 'Enjoy the weekend üòÅ';
        break;
    default:
        echo 'Not a valid day';
}

",user_2mlEznod51hhL2F6Y9kHYlSzv8I
79,PHP Loops,Commonly used loops in php,PHP,"// Basic For Loop

for ($rep = 1; $rep <= 10; $rep++) {
    echo 'Lifting weight rep $rep';
}



// Looping Over an Array (const friends = ['Luke', 'Ben', 'Rich', 'Sam'])

for ($i = 0; $i < count($friends); $i++) {
    echo $friends[$i];
}



// Basic While Loop (const friends = ['Luke', 'Ben', 'Rich', 'Sam'])

$i = 0;
while ($i < count($friends)){
    echo $friends[$i];
    $i++;
}



// For Each Looping Over an Array (const friends = ['Luke', 'Ben', 'Rich', 'Sam'])

foreach ($friends as $friend) {
    echo $friend;
}

// Alternate way
<?php foreach ($friends as $friend) : ?>
    <li><?php echo $friend ?></li>
<?php endforeach; ?>",user_2mlEznod51hhL2F6Y9kHYlSzv8I
80,PHP Class,Classes (object blueprint) in php,PHP,"class User {
    public $first_name;
    public $last_name;
    public $job;

    public function __construct($first_name, $last_name, $job) { // A constructor allows you to initialize an object's properties upon creation of the object
        $this->first_name = $first_name;
        $this->last_name = $last_name;
        $this->job = $job;
    }

    public function login() {
        echo $this->first_name . ' logged in';
    }
}
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
81,PHP PDO Connection,Connect to a database using the PHP Data Object,PHP,"<?php

// Database configuration
$host = 'localhost';
$port = 3306;
$dbName = 'dbname;
$username = 'dbuser';
$password = 'dbpassword';

// Connection string (DSN)
$dsn = ""mysql:host={$host};port={$port};dbname={$dbName};charset=utf8"";

try {
  // Create a PDO instance
  $pdo = new PDO($dsn, $username, $password);

  // Set PDO to throw exceptions on error
  $pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);

  // Set the default fetch mode to FETCH_ASSOC
    $pdo->setAttribute(PDO::ATTR_DEFAULT_FETCH_MODE, PDO::FETCH_ASSOC);

} catch (PDOException $e) {
  // If there is an error with the connection, catch it here
  echo ""Connection failed: "" . $e->getMessage();
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
82,JavaScript Arrays Methods,Commonly used Javascript array methods,JavaScript,"const friends = ['Luke', 'Ben', 'Rich', 'Sam'];

friends.push('Jon') // Adds item to the end of the array
friends.unshift('Craig') // Adds item to the start of the array
friends.pop() // Removes item to the end of the array
friends.shift() // Removes item to the start of the array
friends.slice(1, 3); // Copy's items from index 1 - index 3 [Ben, Rich], which can be saved in a new array
friends.splice(1, 3); // Removes items from index 1 - index 3 ['Ben', 'Rich'] from the original array ['luke', 'sam']
friends.reverse(); // Reverses the original array - ['sam', 'rich', 'ben', 'luke']
friends.includes('luke'); // Checks if the array contains luke (returns true if it contains luke) - ['sam', 'rich', 'ben', 'luke']
friends.sort(); // Sorts the array in alphabetic order (re-orders original array)",user_2mlEznod51hhL2F6Y9kHYlSzv8I
83,JavaScript Loops,Commonly used loops in JavaScript,JavaScript,"// Basic For Loop

for (let rep = 1; rep <= 10; rep++) {
    console.log(`Lifting weight rep ${rep} `)
}


// Looping Over an Array (const friends = ['Luke', 'Ben', 'Rich', 'Sam'])

for (let i = 0; i < friends.length; i++) {
    console.log(friends[i]);
}


// Basic While Loop

let rep = 1
while (rep <= 10) {
    console.log(`Lifting weight rep ${rep} `);
    rep++;
}


// Basic For Of Loop - (Array - const friends = ['Luke', 'Ben', 'Rich', 'Sam'])

for (const friend of friends ) {
    console.log(friend)
}


//Basic For Each Loop - (Array - const friends = ['Luke', 'Ben', 'Rich', 'Sam'])

friends.forEach( function (friend) {
    console.log(friend)
})

Map Method looping an array - (Array - const numbers = [2, 4, 6, 8]) - creates new array newNumbers = [4, 8, 12, 19]

const newNumbers = numbers.map(function(number) {
    return number * 2;
})",user_2mlEznod51hhL2F6Y9kHYlSzv8I
84,JavaScript Objects,Basic object and methods in Javascript,JavaScript,"const luke = {
    firstName: 'Luke',
    lastName: 'Coleman',
    birthYear: 1985,
    job: 'Developer',
    friends: ['Sam', 'Jon', 'Rich'],
    isAwesome: true,

    calcAge3: function () {
        this.age = 2022 - this.birthYear;
        return this.age;
    }
}


// Basic Object Methods

console.log(luke.firstName); // Gets first name value from the object - normally used
//or
console.log(luke['firstName']); // Gets first name value from the object

luke.location = 'England'; // Adds location to the object
console.log(luke);

luke.calcAge3() // Calls objects function
console.log(luke.age);// Gets age from object (created with the above function call)",user_2mlEznod51hhL2F6Y9kHYlSzv8I
85,JavaScript DOM Manipulation ,Commonly used ways of manipulating the DOM,JavaScript,"//Selecting Elements In The DOM

document.getElementsByTagName('button') // grabs all buttons
document.getElementsByClassName('class') // grab element by class
document.getElementById('id') // grab element by id
document.querySelector('.header') // grab element by selector
document.querySelectorAll() // grab all


// Manipulating Elements In The DOM

const message = document.innerHTML = '<h2>Hello message</h2> ' // Creates html content
header.prepend(message) // adds message htm to the top / first child of header element
header.append(message) // adds message html to bottom / last child of header element
header.before(message) // adds message html before the header element
header.after(message) // adds message html after the header element
message.remove() // removes the message element
document.querySelector('.class').textContent = 'text here' // Changes text content
document.querySelector('body').style.backgroundColor = '#222' // Changes background color
document.querySelector('body').style.width = '15rem' // Changes width
document.querySelector('.class').classList.add('class') // Adds a class to the element
document.querySelector('.class').classList.remove('class') // Removes a class from an element
document.querySelector('.class').classList.toggle('class')// Toggles a class
document.createElement('div') // Creates a div


// Event Listener

document.querySelector('.btn').addEventListener('click', function () {
    console.log('You clicked the button')
}) // Click

document.addEventListener(""keydown"", function(e) {
    console.log('you pressed a key')
}) // Key press",user_2mlEznod51hhL2F6Y9kHYlSzv8I
86,JavaScript Fetch ,Example of using fetch with try and catch in JavaScript for handling asynchronous operations,JavaScript,"async function fetchData() {
  try {
    const response = await fetch('https://api.example.com/data');
    
    if (!response.ok) {
      throw new Error('Network response was not ok');
    }

    const data = await response.json();
    console.log('Data successfully fetched:', data);
  } catch (error) {
    console.error('Error fetching data:', error.message);
  }
}

// Call the function to initiate the data fetching process
fetchData();
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
87,Axios GET,Using Axios to fetch data from an api,JavaScript,"async function fetchData() {
  try {
    const response = await axios.get('https://api.example.com/data');
    const responseData = response.data;
    console.log(responseData);
  } catch (error) {
    console.error('Error fetching data:', error.message);
  }
}

fetchData();",user_2mlEznod51hhL2F6Y9kHYlSzv8I
88,Axios POST,Use Axios to make a post request.,JavaScript,"async function performPostRequest() {
  try {
    const postData = { key: 'value' };
    const response = await axios.post('https://api.example.com/create', postData);
    console.log('POST response:', response.data);
  } catch (error) {
    console.error('POST error:', error.message);
  }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
89,Axios PUT,Use Axios to make a PUT request ,JavaScript,"async function performPutRequest() {
  try {
    const putData = { updatedKey: 'updatedValue' };
    const response = await axios.put('https://api.example.com/update/123', putData);
    console.log('PUT response:', response.data);
  } catch (error) {
    console.error('PUT error:', error.message);
  }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
90,Axios PATCH,Use Axios to perform a PATCH request,JavaScript,"async function performPatchRequest() {
  try {
    const patchData = { partialUpdateKey: 'updatedValue' };
    const response = await axios.patch('https://api.example.com/patch/456', patchData);
    console.log('PATCH response:', response.data);
  } catch (error) {
    console.error('PATCH error:', error.message);
  }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
91,Axios DELETE,Use Axios to make a delete request.,JavaScript,"async function performDeleteRequest() {
  try {
    const response = await axios.delete('https://api.example.com/delete/789');
    console.log('DELETE response:', response.data);
  } catch (error) {
    console.error('DELETE error:', error.message);
  }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
92,Axios With Auth,Make API requests with Axios including auth details,JavaScript,"// Basic Auth

async function performRequestWithBasicAuth() {
  const username = 'your_username';
  const password = 'your_password';

  const authString = `${username}:${password}`;
  const base64AuthString = Buffer.from(authString).toString('base64');

  try {
    const response = await axios.get('https://api.example.com/data', {
      headers: {
        'Authorization': `Basic ${base64AuthString}`,
      },
    });

    console.log('Response:', response.data);
  } catch (error) {
    console.error('Error:', error.message);
  }
}

// API key / Token

async function performRequestWithApiKey() {
  const apiKey = 'your_api_key';

  try {
    const response = await axios.get('https://api.example.com/data', {
      headers: {
        'Authorization': `Bearer ${apiKey}`,
      },
    });

    console.log('Response:', response.data);
  } catch (error) {
    console.error('Error:', error.message);
  }
}",user_2mlEznod51hhL2F6Y9kHYlSzv8I
93,SQL CREATE TABLE Statement,Create a table in sql,SQL,"CREATE TABLE TableName (
    Column1 DataType,
    Column2 DataType,
    ...
);


CREATE TABLE Employees (
    Id INT,  (id SERIAL PRIMARY KEY) <-- Postgres
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    BirthDate DATE,
    Salary DECIMAL(10,2),
    PRIMARY KEY (Id)                  <-- No need in Postgres
);",user_2mlEznod51hhL2F6Y9kHYlSzv8I
94,SQL INSERT INTO Statement,Adds a new record to the table,SQL,"INSERT INTO Employees (EmployeeID, FirstName, LastName, BirthDate, Salary)
VALUES (1, 'John', 'Doe', '1990-05-15', 50000.00);",user_2mlEznod51hhL2F6Y9kHYlSzv8I
95,PDO Select Multiple Records,Select multiple records from a database with PDO,PHP,"<?php
require_once 'database.php';

// Prepare a SELECT statement
$stmt = $pdo->prepare('SELECT * FROM posts');

// Execute the statement
$stmt->execute();

// Fetch the results
$posts = $stmt->fetchAll();

// var_dump($posts);
?>

<!DOCTYPE html>
<html lang=""en"">

<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <script src=""https://cdn.tailwindcss.com""></script>
  <title>Blog</title>
</head>

<body class=""bg-gray-100"">
  <header class=""bg-blue-500 text-white p-4"">
    <div class=""container mx-auto"">
      <h1 class=""text-3xl font-semibold"">My Blog</h1>
    </div>
  </header>
  <div class=""container mx-auto p-4 mt-4"">
    <?php foreach ($posts as $post) : ?>
      <div class=""md my-4"">
        <div class=""rounded-lg shadow-md"">
          <div class=""p-4"">
            <h2 class=""text-xl font-semibold""><?= $post['title'] ?></h2>
            <p class=""text-gray-700 text-lg mt-2""><?= $post['body'] ?></p>
          </div>
        </div>
      </div>
    <?php endforeach; ?>
  </div>
</body>

</html>",user_2mlEznod51hhL2F6Y9kHYlSzv8I
96,SQL WHERE Statement,The WHERE clause is used in a SELECT statement to filter records based on a specified condition,SQL,"SELECT * FROM Employees
WHERE Salary > 60000;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
97,SQL UPDATE Statement,The UPDATE statement is used to modify existing records in a table,SQL,"UPDATE Employees
SET Salary = 65000
WHERE EmployeeID = 1;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
98,SQL ALTER TABLE Statement,"The ALTER TABLE statement is used to modify an existing table, such as adding, modifying, or dropping columns",SQL,"ALTER TABLE Employees
ADD COLUMN Department VARCHAR(50);",user_2mlEznod51hhL2F6Y9kHYlSzv8I
99,SQL DELETE Statement,The DELETE statement is used to remove records from a table based on a specified condition,SQL,"DELETE FROM Employees
WHERE EmployeeID = 1;",user_2mlEznod51hhL2F6Y9kHYlSzv8I
100,SQL FOREIGN KEY,A foreign key is used to establish a link between two tables in a database,SQL,"CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    CustomerName VARCHAR(50)
);

CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    OrderDate DATE,
    CustomerID INT,
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);",user_2mlEznod51hhL2F6Y9kHYlSzv8I
101,SQL JOIN Statement,An INNER JOIN is used to combine rows from two or more tables based on a related column between them,SQL,"SELECT Orders.OrderID, Orders.OrderDate, Customers.CustomerName
FROM Orders
JOIN Customers ON Orders.CustomerID = Customers.CustomerID;
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
102,Postgres Initial Connection,How to connect to a Postgres database from a Node server,Postgres,"import pg from ""pg""

const db = new pg.Client({
  user: ""postgres"",
  host: ""localhost"",
  database: ""database name"",
  password: ""database password"",
  port: 5432
})

db.connect();

db.query(""SELECT * FROM table"", (err, res) => {
  if (err) {
    console.log(""Error with the query"")
  } else {
    console.log(res.rows)
  }
  db.end()
})",user_2mlEznod51hhL2F6Y9kHYlSzv8I
104,PHP Superglobals,Built-in variables that are always available in all scopes,PHP,"$_GLOBALS:  An associative array containing references to all variables currently defined in the global scope of the script.

$_SERVER: An associative array containing information such as headers, paths, and script locations. It provides details about the server environment and the request made to it.

$_GET: An associative array of variables passed to the current script via the URL parameters (query string).

$_POST: An associative array of variables passed to the current script via the HTTP POST method.

$_FILES: An associative array of items uploaded to the current script via the HTTP POST method. It contains information about the uploaded files.

$_REQUEST: An associative array that by default contains the contents of $_GET, $_POST, and $_COOKIE. It can be customized to include other request variables.

$_SESSION: An associative array containing session variables available to the current script. These variables are stored on the server and persist across multiple requests.

$_ENV: An associative array of environment variables passed to the current script from the environment in which the PHP parser is running.

$_COOKIE: An associative array of variables passed to the current script via HTTP cookies.

$php_errormsg: A variable containing the last error message generated by PHP. This is only available if the track_errors configuration option is enabled.

Each of these superglobals plays a crucial role in managing data across different parts of a PHP application, making it easier to handle web requests, sessions, and user input.",user_2mlEznod51hhL2F6Y9kHYlSzv8I
105,PHP $_GET,An associative array of variables passed to the current script via the URL parameters.,PHP,"<?php

// URL: example.com/page.php?name=John

echo $_GET['name']; // Outputs: John

?>

",user_2mlEznod51hhL2F6Y9kHYlSzv8I
106,PHP $_POST,An associative array of variables passed to the current script via the HTTP POST method.,PHP,"<?php

// Assuming a form is submitted with method=""post"" and an input named ""name""

echo $_POST['name']; // Outputs the value of the 'name' input field from the form

?>
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
107,PHP $_FILES,An associative array of items uploaded to the current script via the HTTP POST method.,PHP,"<?php

// Assuming a file upload form with method=""post"" and an input named ""file""

if (isset($_FILES['file'])) {
    echo $_FILES['file']['name'];  // Outputs the original name of the uploaded file
}

?>
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
108,PHP $_COOKIE,An associative array of variables passed to the current script via HTTP cookies.,PHP,"<?php

// Assuming a cookie named ""user"" is set

echo $_COOKIE['user']; // Outputs the value of the ""user"" cookie

?>
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
109,PHP $_SESSION,An associative array containing session variables available to the current script,PHP,"<?php

session_start();

$_SESSION['username'] = 'JohnDoe';

echo $_SESSION['username']; // Outputs: JohnDoe

?>
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
110,PHP $_REQUEST,"An associative array that by default contains the contents of $_GET, $_POST, and $_COOKIE.",PHP,"<?php

// URL: example.com/page.php?name=John

echo $_REQUEST['name']; // Outputs: John

?>
",user_2mlEznod51hhL2F6Y9kHYlSzv8I
111,PDO Select a Single Record,Select a single record from the database with PDO,PHP,"<?php
require_once 'database.php';

// Get id from query string
$id = $_GET['id'] ?? null;

// If id is null, redirect to index.php
if (!$id) {
  header('Location: index.php');
  exit;
}

// SELECT statement with placeholder for id
$sql = 'SELECT * FROM posts WHERE id = :id';

// Prepare the SELECT statement
$stmt = $pdo->prepare($sql);

// Params for prepared statement
$params = ['id' => $id];

// Execute the statement
$stmt->execute($params);

// Fetch the post from the database
$post = $stmt->fetch();
?>

// HTML EXAMPLE
<!DOCTYPE html>
<html lang=""en"">

<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <script src=""https://cdn.tailwindcss.com""></script>
  <title><?= $post['title'] ?></title>
</head>

<body class=""bg-gray-100"">
  <header class=""bg-blue-500 text-white p-4"">
    <div class=""container mx-auto"">
      <h1 class=""text-3xl font-semibold"">My Blog</h1>
    </div>
  </header>
  <div class=""container mx-auto p-4 mt-4"">
    <div class=""md my-4"">
      <div class=""rounded-lg shadow-md"">
        <div class=""p-4"">
          <h2 class=""text-xl font-semibold""><?= $post['title']; ?></h2>
          <p class=""text-gray-700 text-lg mt-2 mb-5""><?= $post['body']; ?></p>
          <a href=""index.php"">Go Back</a>
        </div>
      </div>
    </div>
  </div>
</body>

</html>",user_2mlEznod51hhL2F6Y9kHYlSzv8I
112,PDO Insert Single Record,Insert a single record to the database from a form with PDO,PHP,"<?php
require_once 'database.php';

if ($_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['submit'])) {
  $title = htmlspecialchars($_POST['title'] ?? '');
  $body = htmlspecialchars($_POST['body'] ?? '');

  // INSERT statement with placeholders for title and body
  $sql = 'INSERT INTO sometable (title, body) VALUES (:title, :body)';

  // Prepare the statement
  $stmt = $pdo->prepare($sql);

  // Params for prepared statement
  $params = [
    'title' => $title,
    'body' => $body
  ];

  // Execute the statement
  $stmt->execute($params);

  header('Location: index.php');
  exit;
}
?>

// HTML Example
<form method=""post"">
        <div>
          <label for=""title"">Title</label>
          <input type=""text"" id=""title"" name=""title"" placeholder=""Enter post title"" value=""<?= $title ?>"">
        </div>
        <div>
          <label for=""body"">Body</label>
          <textarea id=""body"" name=""body"" placeholder=""Enter post body""><?= $body ?></textarea>
        </div>
        <div>
          <button type=""submit"" name=""submit"">
            Submit
          </button>
          <a href=""index.php"">Back to Posts</a>
        </div>
      </form>",user_2mlEznod51hhL2F6Y9kHYlSzv8I
113,PDO Delete Record,Delete a single record in the database with PDO,PHP,"// Post.php
 <form action=""delete.php"" method=""post"">
        <input type=""hidden"" name=""_method"" value=""delete"">
        <input type=""hidden"" name=""id"" value=""<?= $post['id'] ?>"">
        <button type=""submit"" name=""submit"" class=""bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600 focus:outline-none"">Delete</button>
      </form>

// Delete.php
<?php

require_once 'database.php';

$isDeleteRequest = ($_SERVER['REQUEST_METHOD'] === 'POST' && ($_POST['_method'] ?? '') === 'delete');

if ($isDeleteRequest) {
  $id = $_POST['id'];

  $sql = 'DELETE FROM posts WHERE id = :id';

  $stmt = $pdo->prepare($sql);

  $params = ['id' => $id];

  $stmt->execute($params);

  header('Location: index.php');",user_2mlEznod51hhL2F6Y9kHYlSzv8I
114,PDO Update Record,Update a record in the database with PDO,PHP,"// Post.php
 <a href=""edit.php?id=<?= $post['id'] ?>"">Edit</a>

// Edit.php
<?php
require_once 'database.php';

// Get id from query string
$id = $_GET['id'] ?? null;

// If id is null, redirect to index.php
if (!$id) {
  header('Location: index.php');
  exit;
}

// SELECT statement with placeholder for id
$sql = 'SELECT * FROM posts WHERE id = :id';

// Prepare the SELECT statement
$stmt = $pdo->prepare($sql);

// Params for prepared statement
$params = ['id' => $id];

// Execute the statement
$stmt->execute($params);

// Fetch the post from the database
$post = $stmt->fetch();

// Check if the form is submitted with the ""put"" method (for updating)
$isPutRequest = ($_SERVER['REQUEST_METHOD'] === 'POST' && ($_POST['_method'] ?? '') === 'put');

if ($isPutRequest) {

  $title = htmlspecialchars($_POST['title'] ?? '');
  $body = htmlspecialchars($_POST['body'] ?? '');

  // UPDATE statement with placeholders for title, body and id
  $sql = 'UPDATE posts SET title = :title, body = :body WHERE id = :id';

  // Prepare the statement
  $stmt = $pdo->prepare($sql);

  // Params for prepared statement
  $params = [
    'title' => $title,
    'body' => $body,
    'id' => $id
  ];

  // Execute the statement
  $stmt->execute($params);

  header('Location: index.php');
  exit;
}
?>


<!DOCTYPE html>
<html lang=""en"">

<head>
  <meta charset=""UTF-8"">
  <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"">
  <title>Update Blog Post</title>
  <script src=""https://cdn.tailwindcss.com""></script>
</head>

<body class=""bg-gray-100"">
   <header class=""bg-blue-500 text-white p-4"">
    <div class=""container mx-auto"">
      <h1 class=""text-3xl font-semibold"">My Blog</h1>
    </div>
  </header>
  <div class=""flex justify-center mt-10"">
    <div class=""bg-white p-8 rounded shadow-md w-full max-w-md"">
      <h1 class=""text-2xl font-semibold mb-6"">Update Blog Post</h1>
      <form method=""post"">
        <input type=""hidden"" name=""_method"" value=""put"">
        <input type=""hidden"" name=""id"" value=""<?= $post['id'] ?>"">
        <div class=""mb-4"">
          <label for=""title"" class=""block text-gray-700 font-medium"">Title</label>
          <input type=""text"" id=""title"" name=""title"" placeholder=""Enter post title"" value=""<?= $post['title'] ?>"">
        </div>
        <div class=""mb-6"">
          <label for=""body"" class=""block text-gray-700 font-medium"">Body</label>
          <textarea id=""body"" name=""body"" placeholder=""Enter post body""><?= $post['body'] ?></textarea>
        </div>
        <div class=""flex items-center justify-between"">
          <button type=""submit"" name=""submit"">
            Submit
          </button>
          <a href=""index.php"" class=""text-blue-500 hover:underline"">Back to Posts</a>
        </div>
      </form>
    </div>
  </div>
</body>

</html>",user_2mlEznod51hhL2F6Y9kHYlSzv8I